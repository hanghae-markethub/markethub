# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: markethub-cicd

on:
  push:
    branches: [ "feat/cart" ]
#  pull_request:
#    branches: [ "main" ]

#permissions:
#  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

#      - name: Download and install Elasticsearch
#        run: |
#          wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.16.2-linux-x86_64.tar.gz
#          tar -zxvf elasticsearch-7.16.2-linux-x86_64.tar.gz
#          cd elasticsearch-7.16.2
#
#      - name: Start Elasticsearch
#        run: |
#          ./bin/elasticsearch -d

      - name: Download and install Elasticsearch
        run: |
          curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch |sudo gpg --dearmor -o /usr/share/keyrings/elastic.gpg
          echo "deb [signed-by=/usr/share/keyrings/elastic.gpg] https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list
          sudo apt update
          sudo apt install elasticsearch
          /etc/elasticsearch/elasticsearch.yml
          sudo systemctl enable elasticsearch
  

#      - name: Start Elasticsearch
#        run: |
#          ./bin/elasticsearch -d

      - name: make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USER }}/markethub .
          docker push ${{ secrets.DOCKER_USER }}/markethub

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}

          script: |
            whoami
            sudo docker ps
            sudo docker stop $(docker ps -a -q)
            sudo docker rm $(docker ps -a -q)
            sudo docker pull ${{ secrets.DOCKER_USER }}/markethub
            sudo docker run -d --restart=always --name markethub -p 8080:8080 ${{ secrets.DOCKER_USER }}/markethub
            sudo docker image prune -f